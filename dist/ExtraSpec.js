// Generated by CoffeeScript 1.11.1
(function() {
  var Base, ExtraSpec, Spec, color, ms, symbols,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ms = require("mocha/lib/ms");

  Spec = require("mocha/lib/reporters/spec.js");

  Base = require("mocha/lib/reporters/base.js");

  symbols = Base.symbols, color = Base.color;

  symbols.warning = "âš ";

  if (process.platform === 'win32') {
    symbols.warning = "!";
  }

  ExtraSpec = (function(superClass) {
    extend(ExtraSpec, superClass);

    function ExtraSpec() {
      return ExtraSpec.__super__.constructor.apply(this, arguments);
    }


    /*
    Prints out statistics about the testing, and prints the error log.  Called after all tests have finished.
     */

    ExtraSpec.prototype.epilogue = function() {
      console.log();
      console.log("" + (color('bright pass', ' ')) + (color('green', ' %d passing')) + (color('light', ' (%s)')), this.stats.passes || 0, ms(this.stats.duration));
      if (this.stats.pending) {
        console.log("" + (color('pending', ' ')) + (color('pending', '%d pending')), this.stats.pending);
      }
      if (this.stats.failures) {
        console.log("" + (color('fail', '  %d failing')), this.stats.failures);
        Base.list(this.failures);
        console.log();
      }
      return console.log();
    };

    return ExtraSpec;

  })(Spec);

  module.exports = ExtraSpec;

}).call(this);
